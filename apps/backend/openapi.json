{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Email or username already in use"
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login with email and password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "summary": "Refresh access token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully"
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/users/me": {
      "get": {
        "operationId": "UsersController_getMe",
        "summary": "Get current user profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["users"],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "UsersController_updateMe",
        "summary": "Update current user profile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["users"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/media": {
      "get": {
        "operationId": "MediaController_findMany",
        "summary": "Search and filter media items",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "creator",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "tag",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["media"]
      },
      "post": {
        "operationId": "MediaController_create",
        "summary": "Create new media item",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["media"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/media/{id}": {
      "get": {
        "operationId": "MediaController_findOne",
        "summary": "Get media item by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["media"]
      }
    },
    "/api/media/{id}/ratings": {
      "get": {
        "operationId": "RatingsController_getMediaRatings",
        "summary": "Get all ratings for a media item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ratings"]
      }
    },
    "/api/media/{id}/rating": {
      "put": {
        "operationId": "RatingsController_upsertRating",
        "summary": "Rate a media item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ratings"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/activity": {
      "get": {
        "operationId": "ActivityController_getActivity",
        "summary": "Get activity feed",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["activity"]
      }
    },
    "/api/media/{id}/links": {
      "get": {
        "operationId": "LinksController_getMediaLinks",
        "summary": "Get all links for a media item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["links"]
      }
    },
    "/api/links": {
      "post": {
        "operationId": "LinksController_create",
        "summary": "Create a link between two media items",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["links"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/tags": {
      "get": {
        "operationId": "TagsController_findMany",
        "summary": "Search tags",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["tags"]
      }
    },
    "/api/media/{id}/recommendations": {
      "get": {
        "operationId": "RecommendationsController_getForMedia",
        "summary": "Get recommendations for a media item",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["recommendations"]
      }
    },
    "/api/users/me/recommendations": {
      "get": {
        "operationId": "RecommendationsController_getForUser",
        "summary": "Get personalized recommendations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["recommendations"],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "VibeLink API",
    "description": "Community-driven suggestion platform API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "users",
      "description": "User management"
    },
    {
      "name": "media",
      "description": "Media items"
    },
    {
      "name": "ratings",
      "description": "User ratings"
    },
    {
      "name": "links",
      "description": "Media connections"
    },
    {
      "name": "tags",
      "description": "Content tags"
    },
    {
      "name": "recommendations",
      "description": "Recommendations"
    },
    {
      "name": "activity",
      "description": "User activity feed"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "username": {
            "type": "string",
            "example": "johndoe",
            "minLength": 3,
            "maxLength": 30
          },
          "password": {
            "type": "string",
            "example": "SecurePass123!",
            "minLength": 8
          }
        },
        "required": ["email", "username", "password"]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "type": "object"
          }
        },
        "required": ["accessToken", "refreshToken", "user"]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "SecurePass123!"
          }
        },
        "required": ["email", "password"]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": ["refreshToken"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          }
        }
      }
    }
  }
}
